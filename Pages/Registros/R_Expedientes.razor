@page "/Expediente"
@page "/Expediente/{IdExpediente:int}"
@using Model

@inject ExpedienteBLL expedienteBLL
@inject NotificationService notificationService

<EditForm Model="expediente" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

     <div class="card">
        <div class="card-header">
            <h3>Registro de expedientes</h3>
        </div>
        <div class="card-body">
            @*Descripcion expediente*@
            <div class="form-group">
                <label> Descripcion Expediente</label>
                <InputText @bind-Value="expediente.DescripcionExpediente" class="form-control" />
                <ValidationMessage For="@(() => expediente.DescripcionExpediente)" />
            </div>

            @*NombreBeneficiario*@
            <div class="form-group">
                <label> Nombre Beneficiario</label>
                <InputText @bind-Value="expediente.NombreBeneficiario" class="form-control" />
                <ValidationMessage For="@(() => expediente.NombreBeneficiario)" />
            </div>
            @*ApellidoBeneficiario*@
            <div class="form-group">
                <label> Apellido Beneficiario</label>
                <InputText @bind-Value="expediente.ApellidoBeneficiario" class="form-control" />
                <ValidationMessage For="@(() => expediente.ApellidoBeneficiario)" />
            </div>

            @*CedulaoRnc*@
            <div class="form-group">
                <label> Cedula o Rnc</label>
                <InputText @bind-Value="expediente.CedulaoRnc" class="form-control" />
                <ValidationMessage For="@(() => expediente.CedulaoRnc)" />
            </div>

            @*Telefono*@
            <div class="form-group">
                <label> Telefono</label>
                <InputText @bind-Value="expediente.Telefono" class="form-control" />
                <ValidationMessage For="@(() => expediente.Telefono)" />
            </div> 

            @*Monto*@
            <div class="form-group">
                <label> Monto</label>
                <InputNumber @bind-Value="expediente.Monto" class="form-control" />
                <ValidationMessage For="@(() => expediente.Monto)" />
            </div>      
           @*Tipo*@
            <div class="mb-3">
                <label>Tipo expediente</label>
                <InputSelect class="form-select" @bind-Value="expediente.TipoExpediente">
                    <option value="0" disabled> Seleccione uno </option>
                    <option value="Ayuda">Ayuda</option> 
                    <option value="Compra">Compra</option> 
                    <option value="Pago">Pago</option> 
                </InputSelect>
                <InputText  hidden @bind-Value="expediente.TipoExpediente" class="form-control" />
                <ValidationMessage For="@(() => expediente.TipoExpediente)" />
            </div>

             @*Fecha*@
            <div class="form-group">
                <label> Fecha Entrada</label>
                <InputDate @bind-Value="expediente.FechaDeEntrada" class="form-control" />
                <ValidationMessage For="@(() => expediente.FechaDeEntrada)" />
            </div>   
            @* Estado*@
            <div class="mb-3">
                <label>Tipo expediente</label>
                <InputSelect class="form-select" @bind-Value="expediente.Estado">
                    <option value="0" disabled> Seleccione uno </option>
                    <option value="Activo">Activo</option> 
                    <option value="Desactivado">Desactivado</option> 
                </InputSelect>
                <InputText  hidden @bind-Value="expediente.Estado" class="form-control" />
                <ValidationMessage For="@(() => expediente.Estado)" />
            </div>
             
              
        </div>
    </div>      

        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">
                    <i class="oi oi-file" /> Nuevo
                </button>
                <button type="submit" class="btn btn-lg btn-success">
                    <i class="oi oi-document" /> Guardar
                </button>
                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">
                    <i class="oi oi-trash" /> Eliminar
                </button>
            </div>
        </div>
</EditForm>

@code
{
    [Parameter]
    public int IdExpediente { get; set; }
    public Expedientes expediente { get; set; } = new Expedientes();
    public String mensaje { get; set; } = "";

    private List<Expedientes> ListaExpedientes { get; set; } = new List<Expedientes>();

    protected async override Task OnInitializedAsync()
    {
        ListaExpedientes = await expedienteBLL.GetList(t => true);

        if (IdExpediente > 0)
        {
            this.expediente.IdExpediente = IdExpediente;
            await this.Buscar();
        }
    }
    private async Task Buscar()
    {
        if (expediente.IdExpediente > 0)
        {
            var encontrado = await expedienteBLL.Buscar(expediente.IdExpediente);

            if (encontrado != null)
                this.expediente = encontrado;
        }
        else
        {
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Warning,
                Summary = "No Existe este expediente"
            });
        }
    }

    public void Nuevo()
    {
        mensaje = "";
        expediente = new Expedientes();
    }

    public async Task Guardar()
    {

        bool guardo = await expedienteBLL.Guardar(expediente);

        if (guardo)
        {
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Guardado correctamente"
            });

            Nuevo();
        }
    }

    public async Task Eliminar()
    {
        bool elimino;

        elimino = await expedienteBLL.Eliminacion(expediente);
        if (elimino)
        {
            Nuevo();
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Fue eliminado correctamente."
            });
        }
        else
        {
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Error,
                Summary = "No fue Eliminado, intentar nuevamente o esta intentado eliminar sin datos."
            });
        }
    }

    void ShowNotification(NotificationMessage message)
    {
        notificationService.Notify(message);
    }
}